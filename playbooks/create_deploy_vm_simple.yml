---
- name: Créer une VM de déploiement simple et fonctionnelle
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../secret_vars.yml

  vars:
    # Configuration de la VM (modifiable selon vos besoins)
    vm_id: 810
    vm_name: "deploy-vm"
    vm_cores: 2
    vm_memory: 2048  # 2 GB
    vm_disk_size: 20  # 20 GB
    vm_storage: "local"
    vm_bridge: "vmbr0"  # Réseau public pour accès direct Internet
    vm_ostype: "l26"  # Linux 2.6+
    iso_image: "ubuntu-22.04.4-live-server-amd64.iso"
    
  tasks:
    - name: Afficher le plan de création
      ansible.builtin.debug:
        msg: |
          ==========================================
          CRÉATION DE LA VM DE DÉPLOIEMENT
          ==========================================
          Nom: {{ vm_name }}
          ID: {{ vm_id }}
          Réseau: {{ vm_bridge }} (IP publique directe)
          Ressources: {{ vm_cores }} cores, {{ vm_memory }} MB RAM, {{ vm_disk_size }} GB
          ISO: {{ iso_image }}
          ==========================================

    - name: Vérifier si la VM existe déjà
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/pve/qemu/{{ vm_id }}/status/current"
        method: GET
        headers:
          Authorization: "PVEAPIToken={{ proxmox_user }}@pam!{{ proxmox_api_token_id }}={{ proxmox_api_token_secret }}"
        validate_certs: false
      register: vm_check
      failed_when: false
      changed_when: false

    - name: Arrêter le script si la VM existe déjà
      ansible.builtin.fail:
        msg: "ERREUR: La VM {{ vm_id }} existe déjà. Choisissez un autre ID ou supprimez la VM existante."
      when: vm_check.status == 200

    - name: Créer la VM avec configuration optimisée
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/pve/qemu"
        method: POST
        headers:
          Authorization: "PVEAPIToken={{ proxmox_user }}@pam!{{ proxmox_api_token_id }}={{ proxmox_api_token_secret }}"
        validate_certs: false
        body_format: form-urlencoded
        body:
          vmid: "{{ vm_id }}"
          name: "{{ vm_name }}"
          ostype: "{{ vm_ostype }}"
          cores: "{{ vm_cores }}"
          memory: "{{ vm_memory }}"
          # Réseau sur vmbr0 avec VirtIO, pas de pare-feu Proxmox
          net0: "virtio,bridge={{ vm_bridge }},firewall=0"
          # Disque principal
          scsi0: "{{ vm_storage }}:{{ vm_disk_size }},format=raw"
          scsihw: "virtio-scsi-single"
          # ISO de démarrage
          ide2: "{{ vm_storage }}:iso/{{ iso_image }},media=cdrom"
          boot: "order=ide2;scsi0"
          # Agent QEMU activé
          agent: "enabled=1"
          # Options de performance
          cpu: "x86-64-v2-AES"
          # Démarrage automatique
          onboot: 1
      register: vm_creation
      changed_when: vm_creation.status == 200

    - name: Démarrer la VM
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/pve/qemu/{{ vm_id }}/status/start"
        method: POST
        headers:
          Authorization: "PVEAPIToken={{ proxmox_user }}@pam!{{ proxmox_api_token_id }}={{ proxmox_api_token_secret }}"
        validate_certs: false
        body_format: form-urlencoded
        body: {}
      when: vm_creation.changed

    - name: Attendre 30 secondes que la VM démarre
      ansible.builtin.pause:
        seconds: 30
      when: vm_creation.changed

    - name: Récupérer l'adresse IP de la VM
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/pve/qemu/{{ vm_id }}/agent/network-get-interfaces"
        method: GET
        headers:
          Authorization: "PVEAPIToken={{ proxmox_user }}@pam!{{ proxmox_api_token_id }}={{ proxmox_api_token_secret }}"
        validate_certs: false
      register: vm_network
      failed_when: false
      changed_when: false
      retries: 10
      delay: 10
      until: vm_network.status == 200

    - name: Afficher le résumé final
      ansible.builtin.debug:
        msg: |
          ==========================================
          VM CRÉÉE AVEC SUCCÈS !
          ==========================================
          Nom: {{ vm_name }}
          ID: {{ vm_id }}
          Statut: Démarrée et prête à l'installation
          
          PROCHAINES ÉTAPES:
          1. Connectez-vous à l'interface Proxmox: https://{{ proxmox_host }}:8006
          2. Ouvrez la console de la VM {{ vm_name }} ({{ vm_id }})
          3. Suivez l'installation Ubuntu
          4. Une fois Ubuntu installé, la VM aura une IP publique
          5. Vous pourrez vous connecter en SSH directement: ssh user@<IP_VM>
          
          AVANTAGES DE CETTE CONFIGURATION:
          - IP publique directe (pas de jump host nécessaire)
          - Agent QEMU activé (commandes qm fonctionnelles)
          - Performances optimisées (VirtIO, format raw)
          - Pare-feu Proxmox désactivé (moins de complications)
          ========================================== 